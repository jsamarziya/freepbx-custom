[subCallblock]
exten => start,1,NoOp(subCallblock)
same => n,GotoIf($[${CALLBLOCK_DENY(${CALLERID(num)})}]?blacklisted:checkwl)
same => n(blacklisted),Set(CDR(userfield)=BLACKLISTED)
same => n,Answer()
same => n,Playback(extra/donotcall2)
same => n,HangUp()
same => n(checkwl),GotoIf($[${CALLBLOCK_ALLOW(${CALLERID(num)})}]?accept:block)
same => n(accept),Set(CDR(userfield)=ACCEPTED)
same => n,Dial(SIP/${ARG1},25)
same => n,Voicemail(${ARG1}@default,${IF($["${DIALSTATUS}" = "BUSY"]?b:u)})
same => n,Hangup()
same => n(block),Set(CDR(userfield)=BLOCKED)
same => n,Answer()
same => n,Wait(1)
same => n,Playback(the-party-you-are-calling)
same => n,Playback(is-currently)
same => n,Playback(unavailable)
same => n,VoiceMail(${ARG1}@default)
same => n,Playback(goodbye)
same => n,HangUp()

[from-voipms]
exten => _X.,1,NoOp(Routing from voip.ms)
same => n,GoSub(subCallblock,start,1(10))

[from-line]
exten => 1,1,NoOp(Routing from ATA Line)
same => n,Set(SIPFROM=${SIP_HEADER(From)})
same => n,Log(NOTICE,"SIP From ${SIPFROM}")
same => n,Set(CIDNAME=${CUT(SIPFROM,\",2)})
same => n,Set(SIPURI=${CUT(SIPFROM,\",3)})
same => n,Set(SIPUSER=${CUT(SIPURI,:,2)})
same => n,Set(CIDNUM=${CUT(SIPUSER,@,1)})
same => n,Log(NOTICE,"CID Name: ${CIDNAME}")
same => n,Log(NOTICE,"CID Num: ${CIDNUM}")
same => n,Set(CALLERID(name)=${CIDNAME})
same => n,Set(CALLERID(num)=${CIDNUM})
same => n,GoSub(subCallblock,start,1(1))

exten => 200,1,NoOp(VM test)
same => n,GotoIf($[${CALLBLOCK_DENY(${CALLERID(num)})}]?blacklisted:checkwl)
same => n(blacklisted),Set(CDR(userfield)=BLACKLISTED)
same => n,Answer()
same => n,Playback(extra/donotcall2)
same => n,HangUp()
same => n(checkwl),GotoIf($[${CALLBLOCK_ALLOW(${CALLERID(num)})}]?accept:block)
same => n(accept),Set(CDR(userfield)=ACCEPTED)
same => n,Answer()
same => n,Playback(groovy)
same => n,HangUp()
same => n(block),Set(CDR(userfield)=BLOCKED)
same => n,Answer()
same => n,Playback(the-party-you-are-calling)
same => n,Playback(is-currently)
same => n,Playback(unavailable)
same => n,VoiceMail(200@default)
same => n,Playback(goodbye)
same => n,HangUp()
